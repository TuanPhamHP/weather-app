{"version":3,"sources":["components/WeatherCard.js","App.js","index.js"],"names":["formatDate","date","gmt","hours","getUTCHours","minutes","getMinutes","getSeconds","WeatherCard","weather","weatherHly","t","Date","useState","time","setTime","weatherHrly","setWeatherHrly","useEffect","timezone","setTimeout","newTime","timeInterval","setInterval","clearInterval","key","Math","random","now","className","main","getWeather","temp","onClick","localStorage","clear","setItem","JSON","stringify","name","toFixed","temp_min","temp_max","description","humidity","filter","item","dt","getHours","map","mls","ct","ch","parseToDate","getHourlyTemp","KEY","initialWeather","coord","lon","lat","id","icon","base","feels_like","pressure","visibility","wind","speed","deg","clouds","all","sys","type","country","sunrise","sunset","cod","App","setWeather","setWeatherHly","query","setQuery","search","setSearch","parse","getItem","hourly","setHourly","reg","regH","handleSearch","useCallback","a","Axios","get","result","data","console","log","then","respond","err","action","onSubmit","e","preventDefault","placeholder","onChange","string","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d314ff6f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction formatDate(date, gmt) {\r\n  const hours =\r\n    date.getUTCHours() + gmt < 0 ? `${date.getUTCHours() + gmt + 24}` : date.getUTCHours() + gmt;\r\n  const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n  return `${hours} : ${minutes}`;\r\n}\r\n\r\nfunction WeatherCard({ weather, weatherHly }) {\r\n  const t = new Date();\r\n  const [time, setTime] = useState(formatDate(t));\r\n  const [weatherHrly, setWeatherHrly] = useState(weatherHly);\r\n  useEffect(() => {\r\n    const date = new Date();\r\n    formatDate(date, weather.timezone / 3600);\r\n    setTimeout(() => {\r\n      const now = new Date();\r\n      let newTime = formatDate(now, +(weather.timezone / 3600));\r\n      setTime(newTime);\r\n      setWeatherHrly(weatherHly);\r\n    }, 1);\r\n    const timeInterval = setInterval(() => {\r\n      const now = new Date();\r\n      let newTime = formatDate(now, +(weather.timezone / 3600));\r\n      setTime(newTime);\r\n    }, 6000);\r\n    return () => {\r\n      clearInterval(timeInterval);\r\n    };\r\n  });\r\n  const getWeather = () => {\r\n    switch (weather.weather[0].main) {\r\n      case \"Rain\":\r\n        return \"rainny-day\";\r\n      case \"Clouds\":\r\n        return \"cloudy-day\";\r\n      case \"Clear\":\r\n        return \"clear-sky\";\r\n      case \"Smoke\":\r\n        return \"smoke-day\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  const getTemp = () => {\r\n    if (weather.main.temp < 292) {\r\n      return \"cold-day\";\r\n    } else if (292 < weather.main.temp && weather.main.temp < 300) {\r\n      return \"fresh-day\";\r\n    } else if (weather.main.temp > 300) {\r\n      return \"hot-day\";\r\n    }\r\n  };\r\n  const setDefaultWeather = () => {\r\n    localStorage.clear();\r\n    localStorage.setItem(\"initValue\", JSON.stringify(weather));\r\n  };\r\n  const getHourlyTemp = () => {\r\n    if (!weatherHrly) {\r\n      return;\r\n    }\r\n    // console.log(weatherHrly);\r\n    const parseToDate = mls => {\r\n      let ct = new Date(mls * 1000);\r\n      let ch = `${JSON.stringify(ct.getHours())} : 00`;\r\n      return <p className='time'>{ch}</p>;\r\n    };\r\n    const toDay = weatherHrly.filter(item => {\r\n      if (\r\n        new Date(item.dt * 1000).getHours() > new Date().getHours() &&\r\n        new Date(item.dt * 1000).getHours() < 24\r\n      ) {\r\n        return item;\r\n      }\r\n    });\r\n    const hourlyTemp = toDay.map(item => {\r\n      return (\r\n        <div key={item.dt} className='hourly-items'>\r\n          {parseToDate(item.dt)}\r\n          <p className='temp'>\r\n            {(item.temp - 273.15).toFixed(1)}\r\n            <sup>째C</sup>\r\n          </p>\r\n          <p className='description'>{item.weather[0].description}</p>\r\n        </div>\r\n      );\r\n    });\r\n    return hourlyTemp;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        key={Math.random() * Date.now()}\r\n        className={`weather-card main-card ${getWeather()} ${getTemp()}`}\r\n      >\r\n        <button className='set-default' onClick={setDefaultWeather}>\r\n          Set as default\r\n        </button>\r\n        <p className='weather-name'>{weather.name}</p>\r\n        <p className='weather-temp'>\r\n          {(weather.main.temp - 273.15).toFixed(1)}\r\n          <sup>째C</sup>\r\n        </p>\r\n        <div className='weather-temp--minmax'>\r\n          {\" \"}\r\n          <p className='weather-temp--min'>\r\n            Min :{(weather.main.temp_min - 273.15).toFixed(1)}\r\n            <sup>째C</sup>\r\n          </p>\r\n          <p className='weather-temp--max'>\r\n            Max :{(weather.main.temp_max - 273.15).toFixed(1)}\r\n            <sup>째C</sup>\r\n          </p>\r\n        </div>\r\n        <p className='weather-description'>{weather.weather[0].description}</p>\r\n        <p className='weather-humidity'>Humidity :{weather.main.humidity}%</p>\r\n        <p className='notice notice-cold'>\r\n          Beware, my friends to day is quite cold . Keep your self warm .\r\n        </p>\r\n        <p className='notice notice-cool'>\r\n          What a nice day. My friends, to day is a good day . Keep your self up .\r\n        </p>\r\n        <p className='notice notice-hot'>\r\n          Beware, my friends to day is a hot day . Keep your self calm and have a good day .\r\n        </p>\r\n        <div className='hourly-wrapper'>{getHourlyTemp()}</div>\r\n        <p className='weather-time'>{time}</p>\r\n        <p className='weather-GMT'>\r\n          Time Zone : GMT\r\n          {weather.timezone < 0 ? `${weather.timezone / 3600}` : `+${weather.timezone / 3600}`}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport \"./assets/style/main.scss\";\nconst KEY = \"f5ff5f05cff9a15fb369cecc24fe826c\";\nconst initialWeather = {\n  coord: {\n    lon: 107.83,\n    lat: 16.17,\n  },\n  weather: [\n    {\n      id: 802,\n      main: \"Clouds\",\n      description: \"scattered clouds\",\n      icon: \"03d\",\n    },\n  ],\n  base: \"stations\",\n  main: {\n    temp: 303.64,\n    feels_like: 308.79,\n    temp_min: 302.15,\n    temp_max: 305.15,\n    pressure: 1008,\n    humidity: 74,\n  },\n  visibility: 10000,\n  wind: {\n    speed: 2.1,\n    deg: 200,\n  },\n  clouds: {\n    all: 40,\n  },\n  dt: 1592363664,\n  sys: {\n    type: 1,\n    id: 9310,\n    country: \"VN\",\n    sunrise: 1592345821,\n    sunset: 1592392935,\n  },\n  timezone: 25200,\n  id: 1562822,\n  name: \"Vietnam\",\n  cod: 200,\n};\nfunction App() {\n  const [weather, setWeather] = useState(initialWeather);\n  const [weatherHly, setWeatherHly] = useState(null);\n  const [query, setQuery] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [hourly, setHourly] = useState(\n    JSON.parse(localStorage.getItem(\"initValue\"))\n      ? JSON.parse(localStorage.getItem(\"initValue\")).coord\n      : initialWeather.coord\n  );\n  const reg = `https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${KEY}`;\n  const regH = `https://api.openweathermap.org/data/2.5/onecall?lat=${hourly.lat}&lon=${hourly.lon}&exclude=minutely,daily&appid=${KEY}`;\n  const handleSearch = useCallback(async () => {\n    try {\n      const result = await Axios.get(reg);\n      setWeather(result.data);\n      setHourly(result.data.coord);\n    } catch (error) {\n      console.log(error);\n      setWeather(\n        JSON.parse(localStorage.getItem(\"initValue\"))\n          ? JSON.parse(localStorage.getItem(\"initValue\"))\n          : initialWeather\n      );\n      setHourly(\n        JSON.parse(localStorage.getItem(\"initValue\"))\n          ? JSON.parse(localStorage.getItem(\"initValue\")).coord\n          : initialWeather.coord\n      );\n    }\n  }, [regH, hourly, reg]);\n  useEffect(() => {\n    handleSearch();\n  }, [query]);\n\n  useEffect(() => {\n    try {\n      const resultH = Axios.get(regH);\n      resultH.then((respond) => {\n        setWeatherHly(respond.data.hourly);\n        console.log(respond.data.hourly);\n      });\n    } catch (err) {\n      const resultH = Axios.get(regH);\n      resultH.then((respond) => setWeatherHly(respond.data.hourly));\n    }\n  }, [hourly]);\n\n  const handleUpdate = (e) => {\n    let string = e.target.value;\n    setSearch(string);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let x = search;\n    setQuery(search);\n    setSearch(\"\");\n  };\n  const getWeather = () => {\n    switch (weather.weather[0].main) {\n      case \"Rain\":\n        return \"rainny-day\";\n      case \"Clouds\":\n        return \"cloudy-day\";\n      case \"Clear\":\n        return \"clear-sky\";\n      case \"Smoke\":\n        return \"smoke-day\";\n      default:\n        return \"\";\n    }\n  };\n  return (\n    <div className={`App ${getWeather()}`}>\n      <form action=\"submit\" onSubmit={handleSubmit} className=\"search-form\">\n        <input\n          type=\"text\"\n          placeholder=\"search here\"\n          onChange={handleUpdate}\n          value={search}\n        />\n      </form>\n      <WeatherCard weather={weather} weatherHly={weatherHly} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}